(declare-datatypes () ((G a b c d e f g h i l m)))
(declare-fun R (G G) Bool)
(assert (forall ((x G) (y G))
    (=
        (R x y)
        (or
            (and (= x a) (= y b))
            (and (= x a) (= y d))
            (and (= x a) (= y h))
            (and (= x g) (= y h))
            (and (= x g) (= y b))
            (and (= x b) (= y c))
            (and (= x c) (= y f))
            (and (= x f) (= y e))
            (and (= x g) (= y f))
            (and (= x f) (= y i))
            (and (= x i) (= y l))
            (and (= x l) (= y e))
            (and (= x c) (= y d))
            (and (= x d) (= y e))
            (and (= x h) (= y i))
            (and (= x h) (= y m))
            (and (= x d) (= y m))
            (and (= x l) (= y m))
        )
    )
)
)

(push)
(declare-const I G)
(define-fun PRE ((p G) (V (Array G Bool))) Bool
    (and
        (= p I)
        (forall ((x G)) (not (select V x)))
    )
)
(define-fun POST ((p G) (V (Array G Bool))) Bool
    (and
        (= p I)
        (forall ((x G)) (select V x))
    )
)
(define-fun TRANSISTOR ((p G) (pp G) (V (Array G Bool)) (Vp (Array G Bool))) Bool
    (and
        (not (V pp))
        (or (R p pp) (R pp p))
        (= Vp (store V pp true))
    )
)

(declare-const p0 G)
(declare-const V0 (Array G Bool))
(declare-const p1 G)
(declare-const V1 (Array G Bool))
(declare-const p2 G)
(declare-const V2 (Array G Bool))
(declare-const p3 G)
(declare-const V3 (Array G Bool))
(declare-const p4 G)
(declare-const V4 (Array G Bool))
(declare-const p5 G)
(declare-const V5 (Array G Bool))
(declare-const p6 G)
(declare-const V6 (Array G Bool))
(declare-const p7 G)
(declare-const V7 (Array G Bool))
(declare-const p8 G)
(declare-const V8 (Array G Bool))
(declare-const p9 G)
(declare-const V9 (Array G Bool))
(declare-const p10 G)
(declare-const V10 (Array G Bool))
(declare-const p11 G)
(declare-const V11 (Array G Bool))

(assert (PRE p0 V0))
(assert (TRANSISTOR p0 p1 V0 V1))
(assert (TRANSISTOR p1 p2 V1 V2))
(assert (TRANSISTOR p2 p3 V2 V3))
(assert (TRANSISTOR p3 p4 V3 V4))
(assert (TRANSISTOR p4 p5 V4 V5))
(assert (TRANSISTOR p5 p6 V5 V6))
(assert (TRANSISTOR p6 p7 V6 V7))
(assert (TRANSISTOR p7 p8 V7 V8))
(assert (TRANSISTOR p8 p9 V8 V9))
(assert (TRANSISTOR p9 p10 V9 V10))
(assert (TRANSISTOR p10 p11 V10 V11))
(assert (POST p11 V11))

(check-sat)
(get-model)
(pop)

(push)
(declare-const I G)
(declare-const F G)
(define-fun PRE ((p G) (V (Array G Bool))) Bool
    (and
        (= p I)
        (forall ((x G)) (not (select V x)))
    )
)
(define-fun POST ((p G) (V (Array G Bool))) Bool
    (and
        (= p F)
        (forall ((x G)) (select V x))
    )
)
(define-fun TRANSISTOR ((p G) (pp G) (V (Array G Bool)) (Vp (Array G Bool))) Bool
    (and
        (not (V pp))
        (or (R p pp) (R pp p))
        (= Vp (store V pp true))
    )
)

(declare-const p0 G)
(declare-const V0 (Array G Bool))
(declare-const p1 G)
(declare-const V1 (Array G Bool))
(declare-const p2 G)
(declare-const V2 (Array G Bool))
(declare-const p3 G)
(declare-const V3 (Array G Bool))
(declare-const p4 G)
(declare-const V4 (Array G Bool))
(declare-const p5 G)
(declare-const V5 (Array G Bool))
(declare-const p6 G)
(declare-const V6 (Array G Bool))
(declare-const p7 G)
(declare-const V7 (Array G Bool))
(declare-const p8 G)
(declare-const V8 (Array G Bool))
(declare-const p9 G)
(declare-const V9 (Array G Bool))
(declare-const p10 G)
(declare-const V10 (Array G Bool))
(declare-const p11 G)
(declare-const V11 (Array G Bool))

(assert (PRE p0 V0))
(assert (TRANSISTOR p0 p1 V0 V1))
(assert (TRANSISTOR p1 p2 V1 V2))
(assert (TRANSISTOR p2 p3 V2 V3))
(assert (TRANSISTOR p3 p4 V3 V4))
(assert (TRANSISTOR p4 p5 V4 V5))
(assert (TRANSISTOR p5 p6 V5 V6))
(assert (TRANSISTOR p6 p7 V6 V7))
(assert (TRANSISTOR p7 p8 V7 V8))
(assert (TRANSISTOR p8 p9 V8 V9))
(assert (TRANSISTOR p9 p10 V9 V10))
(assert (TRANSISTOR p10 p11 V10 V11))
(assert (POST p11 V11))

(check-sat)
(get-value (p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11))
(pop)
